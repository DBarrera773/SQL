# For this project, I downloaded a dataset from Break Into Tech.
# Then I created a table to insert data into.
# Finally, I performed analytics on the data using SQL.

--1. Show Customers (their full names, customer ID, and country) who are not in the US.

SELECT firstname || " " || lastname AS FullName, customerid, country
FROM customers
WHERE  country !="USA";

--2. Show only the Customers from Brazil.

SELECT *
FROM customers
WHERE country="Brazil";


--3. Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.


SELECT cust.FirstName, cust.LastName, inv.InvoiceId, inv.BillingCountry, inv.InvoiceDate
FROM chinook.invoices as inv 
LEFT JOIN chinook.customers as cust 
on inv.CustomerId = cust.CustomerId 
WHERE inv.BillingCountry = "Brazil";


--4. Show the Employees who are Sales Agents.

SELECT *
FROM employees
WHERE title='Sales Support Agent';

--5. Find a unique/distinct list of billing countries from the Invoice table.

SELECT DISTINCT billingcountry
FROM invoices;

--6. Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.


SELECT 
    e.FirstName || ' ' || e.LastName AS SalesAgent,
    i.InvoiceId
FROM 
    Employees e
JOIN 
    Customers c ON e.EmployeeId = c.SupportRepId
JOIN 
    Invoices i ON c.CustomerId = i.CustomerId
WHERE 
    e.Title = 'Sales Support Agent';
    
    

--7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.

SELECT c.FirstName || ' ' || c.LastName AS FullName
, i.total
, c.country
, e.FirstName || ' ' || e.LastName AS EmployeeName
FROM invoices i
JOIN customers c
ON i.customerid=c.customerid
JOIN employees e
ON e.employeeid=c.supportrepid;

--8. How many Invoices were there in 2009?

SELECT COUNT(*)
FROM invoices
WHERE invoicedate BETWEEN '2009-01-01' AND '2009-12-31';

--9.What are the total sales for 2009?

SELECT SUM(total)
FROM invoices
WHERE invoicedate BETWEEN '2009-01-01' AND '2009-12-31';

--10. Write a query that includes the purchased track name with each invoice line ID.

SELECT name, invoicelineid
FROM tracks t
JOIN invoice_items i
ON i.trackid=t.trackid;

--11. Write a query that includes the purchased track name AND artist name with each invoice line ID.

SELECT ar.name as Artist, t.Name as Track, i.InvoiceLineId
FROM chinook.Invoice_items i
LEFT JOIN chinook.tracks t 
ON i.TrackID=t.TrackID
INNER JOIN chinook.albums a
ON a.AlbumID=t.AlbumID
LEFT JOIN chinook.artists ar
ON ar.ArtistID=a.ArtistID;

--12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.

SELECT t.name AS 'Track Name', a.title AS 'Album Title', m.name AS 'Media Type', g.name AS 'Genre'
FROM albums a
JOIN tracks t
ON t.albumid=a.albumid
JOIN Genres g
ON g.genreid=t.genreid
LEFT JOIN media_types m
ON m.mediatypeid=t.mediatypeid;

--13. Show the total sales made by each sales agent.

SELECT e.FirstName || ' ' || e.LastName AS 'Employee Name'
, ROUND(SUM(i.total), 2) AS 'Total Sales'
FROM employees e

JOIN customers c
ON c.supportrepid=e.employeeid

JOIN invoices i
ON i.customerid=c.customerid

WHERE e.title='Sales Support Agent'
GROUP BY e.firstname

--14. Which sales agent made the most dollars in sales in 2009?

SELECT e.FirstName || ' ' || e.LastName AS 'Employee Name'
, ROUND(SUM(i.total), 2) AS 'Total Sales'
FROM employees e

JOIN customers c
ON c.supportrepid=e.employeeid

JOIN invoices i
ON i.customerid=c.customerid

WHERE e.title='Sales Support Agent'
AND invoicedate LIKE '2009%'
GROUP BY e.firstname
ORDER BY ROUND(SUM(i.total), 2) DESC LIMIT 1;


--15. 1. How many tracks are there in each genre?

SELECT g.name AS GenreName
,COUNT(t.trackid) AS TrackCount 
FROM genres g
JOIN tracks t
ON g.genreid=t.genreid
GROUP BY g.name
ORDER BY trackcount desc;

--16. What is the total sales for each country?

SELECT billingcountry, ROUND(SUM(total), 2) AS TotalSales
FROM invoices
GROUP BY billingcountry
ORDER BY TotalSales DESC;

--17. List the customers who have purchased more than 5 tracks. Show their full name and the total number of tracks purchased.

SELECT c.FirstName || ' ' || c.LastName AS FullName, COUNT(ii.trackid) AS TotalTracksPurchased
FROM customers c
JOIN invoices i
ON i.customerid=c.customerid
JOIN invoice_items ii
ON ii.invoiceid=i.invoiceid
GROUP BY FullName
HAVING TotalTracksPurchased > 5
ORDER BY TotalTracksPurchased DESC;

 --18. Find the most popular track and how many times it's been played.
 
SELECT t.name AS TrackName
,COUNT(i.invoicelineid) AS PurchaseCount
FROM Tracks t
JOIN invoice_items i
ON i.trackid=t.trackid
GROUP BY TrackName
ORDER BY PurchaseCount DESC
LIMIT 1;


--19. List all albums and the total number of tracks in each album. Show the album title and the track count.

SELECT a.title AS AlbumTitle, COUNT(t.trackid) AS TrackCount
FROM albums a
JOIN Tracks t
ON a.albumid=t.albumid
GROUP BY AlbumTitle
ORDER BY TrackCount DESC;

--20. List the top 3 genres by total sales. Show the genre name and the total sales amount.

SELECT g.name AS GenreName
, ROUND(SUM(ii.unitprice*ii.quantity), 2) AS TotalSales
FROM Genres g
JOIN tracks t
ON t.genreid=g.genreid
JOIN invoice_items ii
ON ii.trackid=t.trackid
GROUP BY GenreName
ORDER BY TotalSales DESC
LIMIT 3;
